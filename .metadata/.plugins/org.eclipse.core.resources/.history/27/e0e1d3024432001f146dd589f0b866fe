package threads;

import mediator.Mediator;
import model.Customer;
import model.Waiter;
import state.customer_state.OrderState;

public class CustomerThread extends Thread{
	
	private Customer customer;
	private Mediator mediator;
	private boolean onPause = false;
	public CustomerThread(Customer customer, Mediator mediator) {
		this.customer = customer;
		this.mediator = mediator;
	}
	
	public Customer getCustomer() {
		return customer;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		customer.setState(new OrderState());
		
		while(customer.getState() instanceof OrderState || onPause) {
			try {
				Thread.sleep(100);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	private boolean order() {
		return mediator.customerOrder(customer);
	}
	
}
